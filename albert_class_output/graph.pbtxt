node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/VarIsInitializedOp"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step/cond/Read/ReadVariableOp/Switch:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp/Switch"
  op: "Switch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "./albert_class_output/rasa_train.tf_record"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const"
  input: "flat_filenames/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "flat_filenames"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "TensorSliceDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map_read_one_file_31"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "FlatMapDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 100
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "RepeatDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "MapAndBatchDataset"
  op: "MapAndBatchDataset"
  input: "ShuffleDataset"
  input: "batch_size"
  input: "num_parallel_calls"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_tf_data_experimental_map_and_batch_<lambda>_61"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: true
    }
  }
}
node {
  name: "optimizations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "map_and_batch_fusion"
        string_val: "noop_elimination"
        string_val: "shuffle_and_repeat_fusion"
      }
    }
  }
}
node {
  name: "OptimizeDataset"
  op: "OptimizeDataset"
  input: "MapAndBatchDataset"
  input: "optimizations"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "optimization_configs"
    value {
      list {
        s: "map_vectorization:use_choose_fastest:false"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "ModelDataset"
  op: "ModelDataset"
  input: "OptimizeDataset"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "algorithm"
    value {
      i: 0
    }
  }
  attr {
    key: "cpu_budget"
    value {
      i: 0
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "ModelDataset"
  input: "IteratorV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "IteratorGetNext:2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "bert/embeddings/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext"
  input: "bert/embeddings/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\210R\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/word_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup"
  op: "GatherV2"
  input: "bert/embeddings/word_embeddings/read"
  input: "bert/embeddings/ExpandDims"
  input: "bert/embeddings/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup/Identity"
  op: "Identity"
  input: "bert/embeddings/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape"
  op: "Reshape"
  input: "bert/embeddings/embedding_lookup/Identity"
  input: "bert/embeddings/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/token_type_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup_1/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup_1"
  op: "GatherV2"
  input: "bert/embeddings/token_type_embeddings/read"
  input: "IteratorGetNext:4"
  input: "bert/embeddings/embedding_lookup_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/embedding_lookup_1/Identity"
  op: "Identity"
  input: "bert/embeddings/embedding_lookup_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/add"
  op: "AddV2"
  input: "bert/embeddings/Reshape"
  input: "bert/embeddings/embedding_lookup_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "bert/embeddings/assert_less_equal/x"
  input: "bert/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/All"
  op: "All"
  input: "bert/embeddings/assert_less_equal/LessEqual"
  input: "bert/embeddings/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (bert/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (bert/embeddings/assert_less_equal/x:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
      }
    }
  }
}
node {
  name: "bert/embeddings/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "bert/embeddings/assert_less_equal/All"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
  input: "bert/embeddings/assert_less_equal/x"
  input: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
  input: "bert/embeddings/assert_less_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/Assign"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/read"
  op: "Identity"
  input: "bert/embeddings/position_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice/begin"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice/size"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "bert/embeddings/Slice"
  op: "Slice"
  input: "bert/embeddings/position_embeddings/read"
  input: "bert/embeddings/Slice/begin"
  input: "bert/embeddings/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1/shape"
  op: "Const"
  input: "^bert/embeddings/assert_less_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/Reshape_1"
  op: "Reshape"
  input: "bert/embeddings/Slice"
  input: "bert/embeddings/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/add_1"
  op: "AddV2"
  input: "bert/embeddings/add"
  input: "bert/embeddings/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/embeddings/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/embeddings/LayerNorm/moments/SquaredDifference"
  input: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/embeddings/LayerNorm/moments/variance"
  input: "bert/embeddings/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/embeddings/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  input: "bert/embeddings/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/moments/mean"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/embeddings/LayerNorm/beta/read"
  input: "bert/embeddings/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/embeddings/LayerNorm/batchnorm/mul_1"
  input: "bert/embeddings/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape"
  op: "Reshape"
  input: "bert/embeddings/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/MatMul"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/add"
  op: "AddV2"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/embedding_hidden_mapping_in/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Reshape"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones"
  op: "Fill"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones/shape_as_tensor"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Cast"
  op: "Cast"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/ones"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/sub/x"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -10000.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/sub"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs"
  op: "Softmax"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  op: "Transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu"
  op: "Relu"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  op: "Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance"
  op: "Mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/strided_slice"
  op: "StridedSlice"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_1"
  input: "bert/pooler/strided_slice/stack"
  input: "bert/pooler/strided_slice/stack_1"
  input: "bert/pooler/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/pooler/Squeeze"
  op: "Squeeze"
  input: "bert/pooler/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/Assign"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "bert/pooler/dense/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/read"
  op: "Identity"
  input: "bert/pooler/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/bias/Assign"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "bert/pooler/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/bias/read"
  op: "Identity"
  input: "bert/pooler/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/MatMul"
  op: "MatMul"
  input: "bert/pooler/Squeeze"
  input: "bert/pooler/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bert/pooler/dense/BiasAdd"
  op: "BiasAdd"
  input: "bert/pooler/dense/MatMul"
  input: "bert/pooler/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bert/pooler/dense/Tanh"
  op: "Tanh"
  input: "bert/pooler/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\017\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "output_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "output_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "output_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "output_weights/Initializer/truncated_normal"
  op: "Add"
  input: "output_weights/Initializer/truncated_normal/mul"
  input: "output_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "output_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_weights/Assign"
  op: "Assign"
  input: "output_weights"
  input: "output_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_weights/read"
  op: "Identity"
  input: "output_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "output_bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_bias/Assign"
  op: "Assign"
  input: "output_bias"
  input: "output_bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_bias/read"
  op: "Identity"
  input: "output_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "loss/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "loss/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "loss/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/dropout/random_uniform/sub"
  op: "Sub"
  input: "loss/dropout/random_uniform/max"
  input: "loss/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/dropout/random_uniform/mul"
  op: "Mul"
  input: "loss/dropout/random_uniform/RandomUniform"
  input: "loss/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/random_uniform"
  op: "Add"
  input: "loss/dropout/random_uniform/mul"
  input: "loss/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dropout/sub"
  op: "Sub"
  input: "loss/dropout/sub/x"
  input: "loss/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dropout/truediv"
  op: "RealDiv"
  input: "loss/dropout/truediv/x"
  input: "loss/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/dropout/random_uniform"
  input: "loss/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/mul"
  op: "Mul"
  input: "bert/pooler/dense/Tanh"
  input: "loss/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/Cast"
  op: "Cast"
  input: "loss/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/dropout/mul_1"
  op: "Mul"
  input: "loss/dropout/mul"
  input: "loss/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "loss/MatMul"
  op: "MatMul"
  input: "loss/dropout/mul_1"
  input: "output_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "loss/BiasAdd"
  op: "BiasAdd"
  input: "loss/MatMul"
  input: "output_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss/Softmax"
  op: "Softmax"
  input: "loss/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "loss/ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/ArgMax"
  op: "ArgMax"
  input: "loss/Softmax"
  input: "loss/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/LogSoftmax"
  op: "LogSoftmax"
  input: "loss/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "loss/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 15
      }
    }
  }
}
node {
  name: "loss/one_hot"
  op: "OneHot"
  input: "IteratorGetNext:3"
  input: "loss/one_hot/depth"
  input: "loss/one_hot/on_value"
  input: "loss/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/one_hot"
  input: "loss/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum"
  op: "Sum"
  input: "loss/mul"
  input: "loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Neg"
  op: "Neg"
  input: "loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/Neg"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "checkpoint_initializer/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/embeddings/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer"
  op: "RestoreV2"
  input: "checkpoint_initializer/prefix"
  input: "checkpoint_initializer/tensor_names"
  input: "checkpoint_initializer/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "checkpoint_initializer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_1/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/embeddings/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1"
  op: "RestoreV2"
  input: "checkpoint_initializer_1/prefix"
  input: "checkpoint_initializer_1/tensor_names"
  input: "checkpoint_initializer_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "checkpoint_initializer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_2/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/embeddings/position_embeddings"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2"
  op: "RestoreV2"
  input: "checkpoint_initializer_2/prefix"
  input: "checkpoint_initializer_2/tensor_names"
  input: "checkpoint_initializer_2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "checkpoint_initializer_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_3/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/embeddings/token_type_embeddings"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3"
  op: "RestoreV2"
  input: "checkpoint_initializer_3/prefix"
  input: "checkpoint_initializer_3/tensor_names"
  input: "checkpoint_initializer_3/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "checkpoint_initializer_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_4/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/embeddings/word_embeddings"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4"
  op: "RestoreV2"
  input: "checkpoint_initializer_4/prefix"
  input: "checkpoint_initializer_4/tensor_names"
  input: "checkpoint_initializer_4/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "checkpoint_initializer_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_5/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5"
  op: "RestoreV2"
  input: "checkpoint_initializer_5/prefix"
  input: "checkpoint_initializer_5/tensor_names"
  input: "checkpoint_initializer_5/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  input: "checkpoint_initializer_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_6/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6"
  op: "RestoreV2"
  input: "checkpoint_initializer_6/prefix"
  input: "checkpoint_initializer_6/tensor_names"
  input: "checkpoint_initializer_6/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  input: "checkpoint_initializer_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_7/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7"
  op: "RestoreV2"
  input: "checkpoint_initializer_7/prefix"
  input: "checkpoint_initializer_7/tensor_names"
  input: "checkpoint_initializer_7/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  input: "checkpoint_initializer_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_8/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8"
  op: "RestoreV2"
  input: "checkpoint_initializer_8/prefix"
  input: "checkpoint_initializer_8/tensor_names"
  input: "checkpoint_initializer_8/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  input: "checkpoint_initializer_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_9/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9"
  op: "RestoreV2"
  input: "checkpoint_initializer_9/prefix"
  input: "checkpoint_initializer_9/tensor_names"
  input: "checkpoint_initializer_9/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  input: "checkpoint_initializer_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_10/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10"
  op: "RestoreV2"
  input: "checkpoint_initializer_10/prefix"
  input: "checkpoint_initializer_10/tensor_names"
  input: "checkpoint_initializer_10/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  input: "checkpoint_initializer_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_11/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11"
  op: "RestoreV2"
  input: "checkpoint_initializer_11/prefix"
  input: "checkpoint_initializer_11/tensor_names"
  input: "checkpoint_initializer_11/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  input: "checkpoint_initializer_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_12/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12"
  op: "RestoreV2"
  input: "checkpoint_initializer_12/prefix"
  input: "checkpoint_initializer_12/tensor_names"
  input: "checkpoint_initializer_12/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  input: "checkpoint_initializer_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_13/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13"
  op: "RestoreV2"
  input: "checkpoint_initializer_13/prefix"
  input: "checkpoint_initializer_13/tensor_names"
  input: "checkpoint_initializer_13/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  input: "checkpoint_initializer_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_14/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14"
  op: "RestoreV2"
  input: "checkpoint_initializer_14/prefix"
  input: "checkpoint_initializer_14/tensor_names"
  input: "checkpoint_initializer_14/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  input: "checkpoint_initializer_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_15/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15"
  op: "RestoreV2"
  input: "checkpoint_initializer_15/prefix"
  input: "checkpoint_initializer_15/tensor_names"
  input: "checkpoint_initializer_15/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  input: "checkpoint_initializer_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_16/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16"
  op: "RestoreV2"
  input: "checkpoint_initializer_16/prefix"
  input: "checkpoint_initializer_16/tensor_names"
  input: "checkpoint_initializer_16/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  input: "checkpoint_initializer_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_17/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17"
  op: "RestoreV2"
  input: "checkpoint_initializer_17/prefix"
  input: "checkpoint_initializer_17/tensor_names"
  input: "checkpoint_initializer_17/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  input: "checkpoint_initializer_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_18/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18"
  op: "RestoreV2"
  input: "checkpoint_initializer_18/prefix"
  input: "checkpoint_initializer_18/tensor_names"
  input: "checkpoint_initializer_18/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  input: "checkpoint_initializer_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_19/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19"
  op: "RestoreV2"
  input: "checkpoint_initializer_19/prefix"
  input: "checkpoint_initializer_19/tensor_names"
  input: "checkpoint_initializer_19/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  input: "checkpoint_initializer_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_20/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20"
  op: "RestoreV2"
  input: "checkpoint_initializer_20/prefix"
  input: "checkpoint_initializer_20/tensor_names"
  input: "checkpoint_initializer_20/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  input: "checkpoint_initializer_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_21/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21"
  op: "RestoreV2"
  input: "checkpoint_initializer_21/prefix"
  input: "checkpoint_initializer_21/tensor_names"
  input: "checkpoint_initializer_21/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  input: "checkpoint_initializer_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_22/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22"
  op: "RestoreV2"
  input: "checkpoint_initializer_22/prefix"
  input: "checkpoint_initializer_22/tensor_names"
  input: "checkpoint_initializer_22/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  input: "checkpoint_initializer_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_23/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/pooler/dense/bias"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23"
  op: "RestoreV2"
  input: "checkpoint_initializer_23/prefix"
  input: "checkpoint_initializer_23/tensor_names"
  input: "checkpoint_initializer_23/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "checkpoint_initializer_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "checkpoint_initializer_24/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/home/wrd/albert/albert_base_zh/model.ckpt-best"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "bert/pooler/dense/kernel"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24"
  op: "RestoreV2"
  input: "checkpoint_initializer_24/prefix"
  input: "checkpoint_initializer_24/tensor_names"
  input: "checkpoint_initializer_24/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "checkpoint_initializer_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.999999873689376e-05
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "PolynomialDecay/Cast_2"
  op: "Cast"
  input: "PolynomialDecay/Cast_2/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3"
  op: "Cast"
  input: "PolynomialDecay/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1000.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Minimum"
  op: "Minimum"
  input: "PolynomialDecay/Cast_2"
  input: "PolynomialDecay/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/truediv"
  op: "RealDiv"
  input: "PolynomialDecay/Minimum"
  input: "PolynomialDecay/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub"
  op: "Sub"
  input: "Const_1"
  input: "PolynomialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub_1"
  op: "Sub"
  input: "PolynomialDecay/sub_1/x"
  input: "PolynomialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Pow"
  op: "Pow"
  input: "PolynomialDecay/sub_1"
  input: "PolynomialDecay/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Mul"
  op: "Mul"
  input: "PolynomialDecay/sub"
  input: "PolynomialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay"
  op: "Add"
  input: "PolynomialDecay/Mul"
  input: "PolynomialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Mean_grad/Reshape"
  input: "gradients/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss/Mean_grad/Tile"
  input: "gradients/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/add"
  op: "AddV2"
  input: "gradients/loss/Sum_grad/Cast_1/x"
  input: "gradients/loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/loss/Sum_grad/add"
  input: "gradients/loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/range"
  op: "Range"
  input: "gradients/loss/Sum_grad/range/start"
  input: "gradients/loss/Sum_grad/Size"
  input: "gradients/loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/loss/Sum_grad/Shape"
  input: "gradients/loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/loss/Sum_grad/range"
  input: "gradients/loss/Sum_grad/mod"
  input: "gradients/loss/Sum_grad/Cast/x"
  input: "gradients/loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Sum_grad/Maximum/x"
  input: "gradients/loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Sum_grad/floordiv/x"
  input: "gradients/loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Neg_grad/Neg"
  input: "gradients/loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Sum_grad/Reshape"
  input: "gradients/loss/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients/loss/Sum_grad/Tile"
  input: "loss/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/loss/Sum_grad/Tile"
  input: "loss/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/LogSoftmax_grad/Exp"
  op: "Exp"
  input: "loss/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/LogSoftmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/loss/LogSoftmax_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_grad/Mul_1"
  input: "gradients/loss/LogSoftmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/loss/LogSoftmax_grad/mul"
  op: "Mul"
  input: "gradients/loss/LogSoftmax_grad/Sum"
  input: "gradients/loss/LogSoftmax_grad/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/LogSoftmax_grad/sub"
  op: "Sub"
  input: "gradients/loss/mul_grad/Mul_1"
  input: "gradients/loss/LogSoftmax_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/loss/LogSoftmax_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/loss/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/loss/LogSoftmax_grad/sub"
  input: "output_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/loss/LogSoftmax_grad/sub"
  input: "loss/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/loss/MatMul_grad/MatMul"
  input: "loss/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/loss/MatMul_grad/MatMul"
  input: "loss/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/dropout/mul_grad/BroadcastGradientArgs/s0"
  input: "gradients/loss/dropout/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/loss/dropout/mul_1_grad/Mul"
  input: "loss/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/pooler/dense/Tanh"
  input: "gradients/loss/dropout/mul_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/loss/dropout/mul_grad/Mul_1"
  input: "gradients/loss/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/dropout/mul_grad/Sum"
  input: "gradients/loss/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/pooler/dense/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "bert/pooler/dense/Tanh"
  input: "gradients/loss/dropout/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/bert/pooler/dense/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/bert/pooler/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/pooler/dense/Tanh_grad/TanhGrad"
  input: "bert/pooler/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/pooler/Squeeze"
  input: "gradients/bert/pooler/dense/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/pooler/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/pooler/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/pooler/dense/MatMul_grad/MatMul"
  input: "gradients/bert/pooler/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/pooler/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/pooler/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/bert/pooler/strided_slice_grad/Shape"
  input: "bert/pooler/strided_slice/stack"
  input: "bert/pooler/strided_slice/stack_1"
  input: "bert/pooler/strided_slice/stack_2"
  input: "gradients/bert/pooler/Squeeze_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/bert/pooler/strided_slice_grad/StridedSliceGrad"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/bert/pooler/strided_slice_grad/StridedSliceGrad"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/bert/pooler/strided_slice_grad/StridedSliceGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/bert/pooler/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/add"
  op: "AddV2"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Cast_1/x"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/add"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range"
  op: "Range"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range/start"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Size"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/range"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/mod"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Cast/x"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum/x"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/floordiv/x"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/AddN_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_4"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_4"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/AddN_4"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_7"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/AddN_7"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_10"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/AddN_10"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_13"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/AddN_13"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_14"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_16"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/AddN_16"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_19"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/AddN_19"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_21"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_22"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_22"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/AddN_22"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_23"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_24"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_25"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_25"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/AddN_25"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_26"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_27"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_28"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_28"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/AddN_28"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_29"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_29"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_29"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_30"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_31"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_31"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/AddN_31"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_32"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_33"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_34"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_34"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/AddN_34"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_35"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_35"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_35"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_36"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_37"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_37"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/AddN_37"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_38"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_39"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_40"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_40"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/AddN_40"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_41"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_41"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_41"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_42"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_43"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_43"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_44"
  op: "AddN"
  input: "gradients/AddN_43"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_44"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_44"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_44"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_45"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_45"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_46"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_46"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_46"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_47"
  op: "AddN"
  input: "gradients/AddN_46"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_47"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_47"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_47"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_48"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_48"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_49"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_49"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_49"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_50"
  op: "AddN"
  input: "gradients/AddN_49"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_50"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_50"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_50"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_51"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_51"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_52"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_52"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_52"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_53"
  op: "AddN"
  input: "gradients/AddN_52"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_53"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_53"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_53"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_54"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_54"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_55"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_55"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_55"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_56"
  op: "AddN"
  input: "gradients/AddN_55"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_56"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_56"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_56"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_57"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_57"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_58"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_58"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_58"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_59"
  op: "AddN"
  input: "gradients/AddN_58"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_59"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_59"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_59"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_60"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_60"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_61"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_61"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_61"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_62"
  op: "AddN"
  input: "gradients/AddN_61"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_62"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_62"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_62"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_63"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_63"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/add"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_64"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_64"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_64"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_65"
  op: "AddN"
  input: "gradients/AddN_64"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_65"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_65"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_65"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_66"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_67"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_67"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_68"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_69"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_69"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_69"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_70"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_71"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/output/dense/einsum/Reshape_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/Relu_grad/ReluGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_72"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_73"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_74"
  op: "AddN"
  input: "gradients/AddN_69"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/ffn_1/intermediate/dense/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_74"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_74"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_74"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_75"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_76"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_76"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_77"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/add"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_78"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_78"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_78"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_79"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/add_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\014\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 12
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_3_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\014\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Sum_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_80"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/sub"
  op: "Sub"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/sub"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_2_grad/Reshape_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  op: "Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/attention_probs_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Mul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_2_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/Mul_grad/Mul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 12
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_81"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Sum"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/add_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_82"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_1_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_83"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_84"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\003\000\000@\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/MatMul_grad/MatMul_1"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 64
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_85"
  op: "AddN"
  input: "gradients/AddN_78"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/value/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_85"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Sum"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/Reshape_1_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_85"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/einsum/transpose_grad/transpose"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_86"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1_grad/Reshape"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "bert/encoder/embedding_hidden_mapping_in/einsum/Reshape"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_87"
  op: "AddN"
  input: "gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_10/layer_10/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_9/layer_9/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_8/layer_8/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_7/layer_7/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_6/layer_6/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_5/layer_5/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_4/layer_4/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_3/layer_3/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_2/layer_2/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0_1/layer_1/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  input: "gradients/bert/encoder/transformer/group_0/layer_0/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Reshape"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Reshape"
  input: "bert/embeddings/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Neg"
  input: "bert/embeddings/LayerNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Mul"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/moments/mean"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_88"
  op: "AddN"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_88"
  input: "bert/embeddings/LayerNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Mul"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/AddN_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Mul_1"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Sum_1"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Sum"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/add"
  op: "AddV2"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Cast_1/x"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/add"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range/start"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Size"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Shape"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/range"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/mod"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Cast/x"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum/x"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/floordiv/x"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Reshape"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Tile"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/bert/embeddings/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/bert/embeddings/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "bert/embeddings/add_1"
  input: "bert/embeddings/LayerNorm/moments/StopGradient"
  input: "^gradients/bert/embeddings/LayerNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_2_grad/Reshape"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Reshape"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Tile"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_89"
  op: "AddN"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul"
  input: "gradients/bert/embeddings/LayerNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/bert/embeddings/LayerNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/bert/embeddings/add_1_grad/BroadcastGradientArgs/s0"
  input: "gradients/bert/embeddings/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_89"
  input: "gradients/bert/embeddings/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/add_1_grad/Sum"
  input: "gradients/bert/embeddings/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/add_1_grad/Reshape"
  input: "gradients/bert/embeddings/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_89"
  input: "gradients/bert/embeddings/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/stack"
  op: "Pack"
  input: "gradients/bert/embeddings/Slice_grad/Rank"
  input: "gradients/bert/embeddings/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Reshape"
  op: "Reshape"
  input: "bert/embeddings/Slice/begin"
  input: "gradients/bert/embeddings/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/sub"
  op: "Sub"
  input: "gradients/bert/embeddings/Slice_grad/Shape_1"
  input: "gradients/bert/embeddings/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/bert/embeddings/Slice_grad/sub"
  input: "bert/embeddings/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/bert/embeddings/Slice_grad/sub_1"
  input: "gradients/bert/embeddings/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/bert/embeddings/Slice_grad/Reshape"
  input: "gradients/bert/embeddings/Slice_grad/Reshape_1"
  input: "gradients/bert/embeddings/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/bert/embeddings/Reshape_1_grad/Reshape"
  input: "gradients/bert/embeddings/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/Cast"
  op: "Cast"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Size"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Cast"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack_1"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/ExpandDims"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/strided_slice"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_89"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext:4"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\210R\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/Cast"
  op: "Cast"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Size"
  input: "gradients/bert/embeddings/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Cast"
  input: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/bert/embeddings/embedding_lookup_grad/ExpandDims"
  input: "gradients/bert/embeddings/embedding_lookup_grad/strided_slice"
  input: "gradients/bert/embeddings/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/bert/embeddings/Reshape_grad/Reshape"
  input: "gradients/bert/embeddings/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/bert/embeddings/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "bert/embeddings/ExpandDims"
  input: "gradients/bert/embeddings/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/bert/embeddings/Slice_grad/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/AddN_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/AddN_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/AddN_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/AddN_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/AddN_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/AddN_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/AddN_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gradients/AddN_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gradients/AddN_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gradients/AddN_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gradients/AddN_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gradients/AddN_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gradients/AddN_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gradients/AddN_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gradients/AddN_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gradients/AddN_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_24"
  op: "L2Loss"
  input: "gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_25"
  op: "L2Loss"
  input: "gradients/loss/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_26"
  op: "L2Loss"
  input: "gradients/loss/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  input: "global_norm/L2Loss_14"
  input: "global_norm/L2Loss_15"
  input: "global_norm/L2Loss_16"
  input: "global_norm/L2Loss_17"
  input: "global_norm/L2Loss_18"
  input: "global_norm/L2Loss_19"
  input: "global_norm/L2Loss_20"
  input: "global_norm/L2Loss_21"
  input: "global_norm/L2Loss_22"
  input: "global_norm/L2Loss_23"
  input: "global_norm/L2Loss_24"
  input: "global_norm/L2Loss_25"
  input: "global_norm/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/IsFinite"
  op: "IsFinite"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: nan
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Select"
  op: "Select"
  input: "clip_by_global_norm/IsFinite"
  input: "clip_by_global_norm/mul"
  input: "clip_by_global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Reshape"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/embedding_lookup_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/bert/embeddings/Slice_grad/Pad"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/embeddings/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/embedding_hidden_mapping_in/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/AddN_86"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/AddN_82"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/query/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/AddN_87"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/AddN_83"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/key/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/AddN_84"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/AddN_81"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/self/value/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/AddN_80"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gradients/AddN_79"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_14"
  op: "Identity"
  input: "clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/attention_1/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gradients/AddN_75"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_15"
  op: "Identity"
  input: "clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gradients/AddN_77"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_16"
  op: "Identity"
  input: "clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gradients/AddN_73"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_17"
  op: "Identity"
  input: "clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gradients/AddN_72"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_18"
  op: "Identity"
  input: "clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gradients/AddN_71"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_19"
  op: "Identity"
  input: "clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gradients/AddN_70"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_20"
  op: "Identity"
  input: "clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/ffn_1/intermediate/output/dense/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gradients/AddN_66"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_21"
  op: "Identity"
  input: "clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gradients/AddN_68"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_22"
  op: "Identity"
  input: "clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/encoder/transformer/group_0_11/layer_11/inner_group_0/LayerNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_23"
  op: "Identity"
  input: "clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_25"
  op: "Mul"
  input: "gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_24"
  op: "Identity"
  input: "clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/bert/pooler/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_26"
  op: "Mul"
  input: "gradients/loss/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_25"
  op: "Identity"
  input: "clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_27"
  op: "Mul"
  input: "gradients/loss/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_26"
  op: "Identity"
  input: "clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\210R\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m/Assign"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_m"
  input: "bert/embeddings/word_embeddings/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_m/read"
  op: "Identity"
  input: "bert/embeddings/word_embeddings/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\210R\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v/Assign"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_v"
  input: "bert/embeddings/word_embeddings/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/word_embeddings/adam_v/read"
  op: "Identity"
  input: "bert/embeddings/word_embeddings/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "Mul/x"
  input: "bert/embeddings/word_embeddings/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mul_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Cast"
  input: "Mul_1/strided_slice/stack"
  input: "Mul_1/strided_slice/stack_1"
  input: "Mul_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Mul_1/y"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Reshape_1"
  input: "Mul_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Mul_1/x"
  input: "Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Mul"
  input: "Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_2"
  op: "Mul"
  input: "Mul_2/x"
  input: "bert/embeddings/word_embeddings/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Cast"
  input: "Square/strided_slice/stack"
  input: "Square/strided_slice/stack_1"
  input: "Square/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Square/x"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/bert/embeddings/embedding_lookup_grad/Reshape_1"
  input: "Square/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "Square/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_3"
  op: "Mul"
  input: "Mul_3/x"
  input: "Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "Mul_2"
  input: "Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "Sqrt"
  input: "add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "add"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "mul_4/x"
  input: "bert/embeddings/word_embeddings/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "truediv"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "bert/embeddings/word_embeddings/read"
  input: "mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_m"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_v"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_m/Assign"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  input: "bert/embeddings/token_type_embeddings/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_m/read"
  op: "Identity"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_v/Assign"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  input: "bert/embeddings/token_type_embeddings/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/token_type_embeddings/adam_v/read"
  op: "Identity"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_6"
  op: "Mul"
  input: "Mul_6/x"
  input: "bert/embeddings/token_type_embeddings/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_7/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mul_7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_7/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_7/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Cast"
  input: "Mul_7/strided_slice/stack"
  input: "Mul_7/strided_slice/stack_1"
  input: "Mul_7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Mul_7/y"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape_1"
  input: "Mul_7/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_7"
  op: "Mul"
  input: "Mul_7/x"
  input: "Mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "Mul_6"
  input: "Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_8/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_8"
  op: "Mul"
  input: "Mul_8/x"
  input: "bert/embeddings/token_type_embeddings/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Square_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Cast"
  input: "Square_1/strided_slice/stack"
  input: "Square_1/strided_slice/stack_1"
  input: "Square_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Square_1/x"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  input: "gradients/bert/embeddings/embedding_lookup_1_grad/Reshape_1"
  input: "Square_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "Square_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_9"
  op: "Mul"
  input: "Mul_9/x"
  input: "Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "Mul_8"
  input: "Mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "Sqrt_1"
  input: "add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "add_4"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_10/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "mul_10/x"
  input: "bert/embeddings/token_type_embeddings/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "truediv_1"
  input: "mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "bert/embeddings/token_type_embeddings/read"
  input: "mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m/Assign"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_m"
  input: "bert/embeddings/position_embeddings/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_m/read"
  op: "Identity"
  input: "bert/embeddings/position_embeddings/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v/Assign"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_v"
  input: "bert/embeddings/position_embeddings/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/position_embeddings/adam_v/read"
  op: "Identity"
  input: "bert/embeddings/position_embeddings/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_12/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_12"
  op: "Mul"
  input: "Mul_12/x"
  input: "bert/embeddings/position_embeddings/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_13"
  op: "Mul"
  input: "Mul_13/x"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_8"
  op: "AddV2"
  input: "Mul_12"
  input: "Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_14/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_14"
  op: "Mul"
  input: "Mul_14/x"
  input: "bert/embeddings/position_embeddings/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_15/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_15"
  op: "Mul"
  input: "Mul_15/x"
  input: "Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_9"
  op: "AddV2"
  input: "Mul_14"
  input: "Mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_10"
  op: "AddV2"
  input: "Sqrt_2"
  input: "add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "add_8"
  input: "add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_16/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "mul_16/x"
  input: "bert/embeddings/position_embeddings/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_11"
  op: "AddV2"
  input: "truediv_2"
  input: "mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_17"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "bert/embeddings/position_embeddings/read"
  input: "mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_m"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_v"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  input: "bert/embeddings/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  input: "bert/embeddings/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_18/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_18"
  op: "Mul"
  input: "Mul_18/x"
  input: "bert/embeddings/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_19/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_19"
  op: "Mul"
  input: "Mul_19/x"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_12"
  op: "AddV2"
  input: "Mul_18"
  input: "Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_20/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_20"
  op: "Mul"
  input: "Mul_20/x"
  input: "bert/embeddings/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_21/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_21"
  op: "Mul"
  input: "Mul_21/x"
  input: "Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_13"
  op: "AddV2"
  input: "Mul_20"
  input: "Mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_3"
  op: "Sqrt"
  input: "add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_14"
  op: "AddV2"
  input: "Sqrt_3"
  input: "add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "add_12"
  input: "add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_22"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "bert/embeddings/LayerNorm/beta/read"
  input: "mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  input: "add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  input: "add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  input: "bert/embeddings/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  input: "bert/embeddings/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/embeddings/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_23/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_23"
  op: "Mul"
  input: "Mul_23/x"
  input: "bert/embeddings/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_24/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_24"
  op: "Mul"
  input: "Mul_24/x"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_15"
  op: "AddV2"
  input: "Mul_23"
  input: "Mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_25/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_25"
  op: "Mul"
  input: "Mul_25/x"
  input: "bert/embeddings/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_4"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mul_26/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_26"
  op: "Mul"
  input: "Mul_26/x"
  input: "Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_16"
  op: "AddV2"
  input: "Mul_25"
  input: "Mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_4"
  op: "Sqrt"
  input: "add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_17/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_17"
  op: "AddV2"
  input: "Sqrt_4"
  input: "add_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "add_15"
  input: "add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_27"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "bert/embeddings/LayerNorm/gamma/read"
  input: "mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  input: "add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  input: "add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_28/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_28"
  op: "Mul"
  input: "Mul_28/x"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_29/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_29"
  op: "Mul"
  input: "Mul_29/x"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_18"
  op: "AddV2"
  input: "Mul_28"
  input: "Mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_30/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_30"
  op: "Mul"
  input: "Mul_30/x"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_5"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_31/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_31"
  op: "Mul"
  input: "Mul_31/x"
  input: "Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_19"
  op: "AddV2"
  input: "Mul_30"
  input: "Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_5"
  op: "Sqrt"
  input: "add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_20/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_20"
  op: "AddV2"
  input: "Sqrt_5"
  input: "add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "add_18"
  input: "add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_32/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_32"
  op: "Mul"
  input: "mul_32/x"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_21"
  op: "AddV2"
  input: "truediv_5"
  input: "mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_33"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/read"
  input: "mul_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  input: "sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  input: "add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  input: "add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_34/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_34"
  op: "Mul"
  input: "Mul_34/x"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_35/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_35"
  op: "Mul"
  input: "Mul_35/x"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_22"
  op: "AddV2"
  input: "Mul_34"
  input: "Mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_36/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_36"
  op: "Mul"
  input: "Mul_36/x"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_6"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_37/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_37"
  op: "Mul"
  input: "Mul_37/x"
  input: "Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_23"
  op: "AddV2"
  input: "Mul_36"
  input: "Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_6"
  op: "Sqrt"
  input: "add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_24/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_24"
  op: "AddV2"
  input: "Sqrt_6"
  input: "add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "add_22"
  input: "add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_38"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_6"
  op: "Sub"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/read"
  input: "mul_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  input: "sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  input: "add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  input: "add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_39/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_39"
  op: "Mul"
  input: "Mul_39/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_40/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_40"
  op: "Mul"
  input: "Mul_40/x"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_25"
  op: "AddV2"
  input: "Mul_39"
  input: "Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_41/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_41"
  op: "Mul"
  input: "Mul_41/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_7"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_42/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_42"
  op: "Mul"
  input: "Mul_42/x"
  input: "Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_26"
  op: "AddV2"
  input: "Mul_41"
  input: "Mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_7"
  op: "Sqrt"
  input: "add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_27/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_27"
  op: "AddV2"
  input: "Sqrt_7"
  input: "add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_7"
  op: "RealDiv"
  input: "add_25"
  input: "add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_43/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_43"
  op: "Mul"
  input: "mul_43/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_28"
  op: "AddV2"
  input: "truediv_7"
  input: "mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_44"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_7"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/read"
  input: "mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  input: "sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  input: "add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  input: "add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_45/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_45"
  op: "Mul"
  input: "Mul_45/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_46/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_46"
  op: "Mul"
  input: "Mul_46/x"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_29"
  op: "AddV2"
  input: "Mul_45"
  input: "Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_47/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_47"
  op: "Mul"
  input: "Mul_47/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_8"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_48/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_48"
  op: "Mul"
  input: "Mul_48/x"
  input: "Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_30"
  op: "AddV2"
  input: "Mul_47"
  input: "Mul_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_8"
  op: "Sqrt"
  input: "add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_31/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_31"
  op: "AddV2"
  input: "Sqrt_8"
  input: "add_31/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_8"
  op: "RealDiv"
  input: "add_29"
  input: "add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_49"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_8"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/read"
  input: "mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  input: "sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  input: "add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  input: "add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_50/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_50"
  op: "Mul"
  input: "Mul_50/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_51/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_51"
  op: "Mul"
  input: "Mul_51/x"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_32"
  op: "AddV2"
  input: "Mul_50"
  input: "Mul_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_52/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_52"
  op: "Mul"
  input: "Mul_52/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_9"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_53/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_53"
  op: "Mul"
  input: "Mul_53/x"
  input: "Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_33"
  op: "AddV2"
  input: "Mul_52"
  input: "Mul_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_9"
  op: "Sqrt"
  input: "add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_34/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_34"
  op: "AddV2"
  input: "Sqrt_9"
  input: "add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_9"
  op: "RealDiv"
  input: "add_32"
  input: "add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_54/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_54"
  op: "Mul"
  input: "mul_54/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_35"
  op: "AddV2"
  input: "truediv_9"
  input: "mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_55"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_9"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/read"
  input: "mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  input: "sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  input: "add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  input: "add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_56/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_56"
  op: "Mul"
  input: "Mul_56/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_57/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_57"
  op: "Mul"
  input: "Mul_57/x"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_36"
  op: "AddV2"
  input: "Mul_56"
  input: "Mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_58/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_58"
  op: "Mul"
  input: "Mul_58/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_10"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_59/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_59"
  op: "Mul"
  input: "Mul_59/x"
  input: "Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_37"
  op: "AddV2"
  input: "Mul_58"
  input: "Mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_10"
  op: "Sqrt"
  input: "add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_38/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_38"
  op: "AddV2"
  input: "Sqrt_10"
  input: "add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_10"
  op: "RealDiv"
  input: "add_36"
  input: "add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_60"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_10"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/read"
  input: "mul_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  input: "sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  input: "add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  input: "add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_61/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_61"
  op: "Mul"
  input: "Mul_61/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_62/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_62"
  op: "Mul"
  input: "Mul_62/x"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_39"
  op: "AddV2"
  input: "Mul_61"
  input: "Mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_63/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_63"
  op: "Mul"
  input: "Mul_63/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_11"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_64/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_64"
  op: "Mul"
  input: "Mul_64/x"
  input: "Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_40"
  op: "AddV2"
  input: "Mul_63"
  input: "Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_11"
  op: "Sqrt"
  input: "add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_41/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_41"
  op: "AddV2"
  input: "Sqrt_11"
  input: "add_41/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_11"
  op: "RealDiv"
  input: "add_39"
  input: "add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_65/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_65"
  op: "Mul"
  input: "mul_65/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_42"
  op: "AddV2"
  input: "truediv_11"
  input: "mul_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_66"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_11"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/read"
  input: "mul_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  input: "sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  input: "add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  input: "add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_67/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_67"
  op: "Mul"
  input: "Mul_67/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_68/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_68"
  op: "Mul"
  input: "Mul_68/x"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_43"
  op: "AddV2"
  input: "Mul_67"
  input: "Mul_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_69/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_69"
  op: "Mul"
  input: "Mul_69/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_12"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_70/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_70"
  op: "Mul"
  input: "Mul_70/x"
  input: "Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_44"
  op: "AddV2"
  input: "Mul_69"
  input: "Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_12"
  op: "Sqrt"
  input: "add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_45/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_45"
  op: "AddV2"
  input: "Sqrt_12"
  input: "add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_12"
  op: "RealDiv"
  input: "add_43"
  input: "add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_71"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_12"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/read"
  input: "mul_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  input: "sub_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  input: "add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  input: "add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_72/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_72"
  op: "Mul"
  input: "Mul_72/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_73/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_73"
  op: "Mul"
  input: "Mul_73/x"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_46"
  op: "AddV2"
  input: "Mul_72"
  input: "Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_74/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_74"
  op: "Mul"
  input: "Mul_74/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_13"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_75/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_75"
  op: "Mul"
  input: "Mul_75/x"
  input: "Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_47"
  op: "AddV2"
  input: "Mul_74"
  input: "Mul_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_13"
  op: "Sqrt"
  input: "add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_48/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_48"
  op: "AddV2"
  input: "Sqrt_13"
  input: "add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_13"
  op: "RealDiv"
  input: "add_46"
  input: "add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_76/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_76"
  op: "Mul"
  input: "mul_76/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_49"
  op: "AddV2"
  input: "truediv_13"
  input: "mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_77"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_13"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/read"
  input: "mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  input: "sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  input: "add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_78/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_78"
  op: "Mul"
  input: "Mul_78/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_79/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_79"
  op: "Mul"
  input: "Mul_79/x"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_50"
  op: "AddV2"
  input: "Mul_78"
  input: "Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_80/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_80"
  op: "Mul"
  input: "Mul_80/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_14"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_81/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_81"
  op: "Mul"
  input: "Mul_81/x"
  input: "Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_51"
  op: "AddV2"
  input: "Mul_80"
  input: "Mul_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_14"
  op: "Sqrt"
  input: "add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_52/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_52"
  op: "AddV2"
  input: "Sqrt_14"
  input: "add_52/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_14"
  op: "RealDiv"
  input: "add_50"
  input: "add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_82"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_14"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/read"
  input: "mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  input: "sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  input: "add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  input: "add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_83/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_83"
  op: "Mul"
  input: "Mul_83/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_84/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_84"
  op: "Mul"
  input: "Mul_84/x"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_53"
  op: "AddV2"
  input: "Mul_83"
  input: "Mul_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_85/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_85"
  op: "Mul"
  input: "Mul_85/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_15"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_86/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_86"
  op: "Mul"
  input: "Mul_86/x"
  input: "Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_54"
  op: "AddV2"
  input: "Mul_85"
  input: "Mul_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_15"
  op: "Sqrt"
  input: "add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_55/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_55"
  op: "AddV2"
  input: "Sqrt_15"
  input: "add_55/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_15"
  op: "RealDiv"
  input: "add_53"
  input: "add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_87"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_15"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/read"
  input: "mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  input: "sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  input: "add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  input: "add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_88/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_88"
  op: "Mul"
  input: "Mul_88/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_89/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_89"
  op: "Mul"
  input: "Mul_89/x"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_56"
  op: "AddV2"
  input: "Mul_88"
  input: "Mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_90/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_90"
  op: "Mul"
  input: "Mul_90/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_16"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_91/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_91"
  op: "Mul"
  input: "Mul_91/x"
  input: "Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_57"
  op: "AddV2"
  input: "Mul_90"
  input: "Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_16"
  op: "Sqrt"
  input: "add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_58/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_58"
  op: "AddV2"
  input: "Sqrt_16"
  input: "add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_16"
  op: "RealDiv"
  input: "add_56"
  input: "add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_92"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_16"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/read"
  input: "mul_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  input: "sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  input: "add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  input: "add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_93/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_93"
  op: "Mul"
  input: "Mul_93/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_94/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_94"
  op: "Mul"
  input: "Mul_94/x"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_59"
  op: "AddV2"
  input: "Mul_93"
  input: "Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_95/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_95"
  op: "Mul"
  input: "Mul_95/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Square_17"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_96/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_96"
  op: "Mul"
  input: "Mul_96/x"
  input: "Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_60"
  op: "AddV2"
  input: "Mul_95"
  input: "Mul_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_17"
  op: "Sqrt"
  input: "add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_61/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_61"
  op: "AddV2"
  input: "Sqrt_17"
  input: "add_61/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "truediv_17"
  op: "RealDiv"
  input: "add_59"
  input: "add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "mul_97/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_97"
  op: "Mul"
  input: "mul_97/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_62"
  op: "AddV2"
  input: "truediv_17"
  input: "mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "mul_98"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "sub_17"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/read"
  input: "mul_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  input: "sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  input: "add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  input: "add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_99/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_99"
  op: "Mul"
  input: "Mul_99/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_100/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_100"
  op: "Mul"
  input: "Mul_100/x"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_63"
  op: "AddV2"
  input: "Mul_99"
  input: "Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_101/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_101"
  op: "Mul"
  input: "Mul_101/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Square_18"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Mul_102/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_102"
  op: "Mul"
  input: "Mul_102/x"
  input: "Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_64"
  op: "AddV2"
  input: "Mul_101"
  input: "Mul_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_18"
  op: "Sqrt"
  input: "add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "add_65/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_65"
  op: "AddV2"
  input: "Sqrt_18"
  input: "add_65/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "truediv_18"
  op: "RealDiv"
  input: "add_63"
  input: "add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "mul_103"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "sub_18"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/read"
  input: "mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  input: "sub_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  input: "add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  input: "add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_104/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_104"
  op: "Mul"
  input: "Mul_104/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_105/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_105"
  op: "Mul"
  input: "Mul_105/x"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_66"
  op: "AddV2"
  input: "Mul_104"
  input: "Mul_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_106/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_106"
  op: "Mul"
  input: "Mul_106/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_19"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_107/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_107"
  op: "Mul"
  input: "Mul_107/x"
  input: "Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_67"
  op: "AddV2"
  input: "Mul_106"
  input: "Mul_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_19"
  op: "Sqrt"
  input: "add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_68/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_68"
  op: "AddV2"
  input: "Sqrt_19"
  input: "add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_19"
  op: "RealDiv"
  input: "add_66"
  input: "add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_108/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_108"
  op: "Mul"
  input: "mul_108/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_69"
  op: "AddV2"
  input: "truediv_19"
  input: "mul_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_109"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_19"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/read"
  input: "mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  input: "sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  input: "add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  input: "add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_110/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_110"
  op: "Mul"
  input: "Mul_110/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_111/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_111"
  op: "Mul"
  input: "Mul_111/x"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_70"
  op: "AddV2"
  input: "Mul_110"
  input: "Mul_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_112/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_112"
  op: "Mul"
  input: "Mul_112/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_20"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_113/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_113"
  op: "Mul"
  input: "Mul_113/x"
  input: "Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_71"
  op: "AddV2"
  input: "Mul_112"
  input: "Mul_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_20"
  op: "Sqrt"
  input: "add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_72/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_72"
  op: "AddV2"
  input: "Sqrt_20"
  input: "add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_20"
  op: "RealDiv"
  input: "add_70"
  input: "add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_114"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_20"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/read"
  input: "mul_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  input: "sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  input: "add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  input: "add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_115/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_115"
  op: "Mul"
  input: "Mul_115/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_116/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_116"
  op: "Mul"
  input: "Mul_116/x"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_73"
  op: "AddV2"
  input: "Mul_115"
  input: "Mul_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_117/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_117"
  op: "Mul"
  input: "Mul_117/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_21"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_118/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_118"
  op: "Mul"
  input: "Mul_118/x"
  input: "Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_74"
  op: "AddV2"
  input: "Mul_117"
  input: "Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_21"
  op: "Sqrt"
  input: "add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_75/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_75"
  op: "AddV2"
  input: "Sqrt_21"
  input: "add_75/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_21"
  op: "RealDiv"
  input: "add_73"
  input: "add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_119"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_21"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/read"
  input: "mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  input: "sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  input: "add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  input: "add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/Assign"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/read"
  op: "Identity"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_120/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_120"
  op: "Mul"
  input: "Mul_120/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_121/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_121"
  op: "Mul"
  input: "Mul_121/x"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_76"
  op: "AddV2"
  input: "Mul_120"
  input: "Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_122/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_122"
  op: "Mul"
  input: "Mul_122/x"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_22"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_123/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_123"
  op: "Mul"
  input: "Mul_123/x"
  input: "Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_77"
  op: "AddV2"
  input: "Mul_122"
  input: "Mul_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_22"
  op: "Sqrt"
  input: "add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_78/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_78"
  op: "AddV2"
  input: "Sqrt_22"
  input: "add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_22"
  op: "RealDiv"
  input: "add_76"
  input: "add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_124"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_22"
  op: "Sub"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/read"
  input: "mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  input: "sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  input: "add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  input: "add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "bert/pooler/dense/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "bert/pooler/dense/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m/Assign"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_m"
  input: "bert/pooler/dense/kernel/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_m/read"
  op: "Identity"
  input: "bert/pooler/dense/kernel/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "bert/pooler/dense/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "bert/pooler/dense/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v/Assign"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_v"
  input: "bert/pooler/dense/kernel/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/kernel/adam_v/read"
  op: "Identity"
  input: "bert/pooler/dense/kernel/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_125/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_125"
  op: "Mul"
  input: "Mul_125/x"
  input: "bert/pooler/dense/kernel/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_126/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_126"
  op: "Mul"
  input: "Mul_126/x"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_79"
  op: "AddV2"
  input: "Mul_125"
  input: "Mul_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_127/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_127"
  op: "Mul"
  input: "Mul_127/x"
  input: "bert/pooler/dense/kernel/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_23"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_128/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_128"
  op: "Mul"
  input: "Mul_128/x"
  input: "Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_80"
  op: "AddV2"
  input: "Mul_127"
  input: "Mul_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_23"
  op: "Sqrt"
  input: "add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_81/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_81"
  op: "AddV2"
  input: "Sqrt_23"
  input: "add_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_23"
  op: "RealDiv"
  input: "add_79"
  input: "add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_129/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_129"
  op: "Mul"
  input: "mul_129/x"
  input: "bert/pooler/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_82"
  op: "AddV2"
  input: "truediv_23"
  input: "mul_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_130"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_23"
  op: "Sub"
  input: "bert/pooler/dense/kernel/read"
  input: "mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_m"
  input: "add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_v"
  input: "add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_m/Assign"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_m"
  input: "bert/pooler/dense/bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_m/read"
  op: "Identity"
  input: "bert/pooler/dense/bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_v/Assign"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_v"
  input: "bert/pooler/dense/bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bert/pooler/dense/bias/adam_v/read"
  op: "Identity"
  input: "bert/pooler/dense/bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_131/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_131"
  op: "Mul"
  input: "Mul_131/x"
  input: "bert/pooler/dense/bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_132/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_132"
  op: "Mul"
  input: "Mul_132/x"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_83"
  op: "AddV2"
  input: "Mul_131"
  input: "Mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_133/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_133"
  op: "Mul"
  input: "Mul_133/x"
  input: "bert/pooler/dense/bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_24"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_134/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_134"
  op: "Mul"
  input: "Mul_134/x"
  input: "Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_84"
  op: "AddV2"
  input: "Mul_133"
  input: "Mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_24"
  op: "Sqrt"
  input: "add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_85/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_85"
  op: "AddV2"
  input: "Sqrt_24"
  input: "add_85/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_24"
  op: "RealDiv"
  input: "add_83"
  input: "add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_135"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_24"
  op: "Sub"
  input: "bert/pooler/dense/bias/read"
  input: "mul_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "sub_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_m"
  input: "add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_v"
  input: "add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_weights/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\017\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "output_weights/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_weights/adam_m/Initializer/zeros"
  op: "Fill"
  input: "output_weights/adam_m/Initializer/zeros/shape_as_tensor"
  input: "output_weights/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_weights/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_weights/adam_m/Assign"
  op: "Assign"
  input: "output_weights/adam_m"
  input: "output_weights/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_weights/adam_m/read"
  op: "Identity"
  input: "output_weights/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "output_weights/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\017\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "output_weights/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_weights/adam_v/Initializer/zeros"
  op: "Fill"
  input: "output_weights/adam_v/Initializer/zeros/shape_as_tensor"
  input: "output_weights/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_weights/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_weights/adam_v/Assign"
  op: "Assign"
  input: "output_weights/adam_v"
  input: "output_weights/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_weights/adam_v/read"
  op: "Identity"
  input: "output_weights/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_136/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_136"
  op: "Mul"
  input: "Mul_136/x"
  input: "output_weights/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_137/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_137"
  op: "Mul"
  input: "Mul_137/x"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_86"
  op: "AddV2"
  input: "Mul_136"
  input: "Mul_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_138/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_138"
  op: "Mul"
  input: "Mul_138/x"
  input: "output_weights/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Square_25"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Mul_139/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_139"
  op: "Mul"
  input: "Mul_139/x"
  input: "Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_87"
  op: "AddV2"
  input: "Mul_138"
  input: "Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_25"
  op: "Sqrt"
  input: "add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_88/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_88"
  op: "AddV2"
  input: "Sqrt_25"
  input: "add_88/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "truediv_25"
  op: "RealDiv"
  input: "add_86"
  input: "add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_140/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_140"
  op: "Mul"
  input: "mul_140/x"
  input: "output_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "add_89"
  op: "AddV2"
  input: "truediv_25"
  input: "mul_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "mul_141"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "sub_25"
  op: "Sub"
  input: "output_weights/read"
  input: "mul_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "output_weights"
  input: "sub_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "output_weights/adam_m"
  input: "add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "output_weights/adam_v"
  input: "add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_bias/adam_m"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_bias/adam_m/Assign"
  op: "Assign"
  input: "output_bias/adam_m"
  input: "output_bias/adam_m/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_bias/adam_m/read"
  op: "Identity"
  input: "output_bias/adam_m"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "output_bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_bias/adam_v"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_bias/adam_v/Assign"
  op: "Assign"
  input: "output_bias/adam_v"
  input: "output_bias/adam_v/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_bias/adam_v/read"
  op: "Identity"
  input: "output_bias/adam_v"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Mul_142/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_142"
  op: "Mul"
  input: "Mul_142/x"
  input: "output_bias/adam_m/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Mul_143/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_143"
  op: "Mul"
  input: "Mul_143/x"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "add_90"
  op: "AddV2"
  input: "Mul_142"
  input: "Mul_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Mul_144/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_144"
  op: "Mul"
  input: "Mul_144/x"
  input: "output_bias/adam_v/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Square_26"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Mul_145/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_145"
  op: "Mul"
  input: "Mul_145/x"
  input: "Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "add_91"
  op: "AddV2"
  input: "Mul_144"
  input: "Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_26"
  op: "Sqrt"
  input: "add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "add_92/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_92"
  op: "AddV2"
  input: "Sqrt_26"
  input: "add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "truediv_26"
  op: "RealDiv"
  input: "add_90"
  input: "add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "mul_146"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "sub_26"
  op: "Sub"
  input: "output_bias/read"
  input: "mul_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "output_bias"
  input: "sub_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "output_bias/adam_m"
  input: "add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "output_bias/adam_v"
  input: "add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign_100"
  input: "^Assign_101"
  input: "^Assign_102"
  input: "^Assign_103"
  input: "^Assign_104"
  input: "^Assign_105"
  input: "^Assign_25"
  input: "^Assign_26"
  input: "^Assign_27"
  input: "^Assign_28"
  input: "^Assign_29"
  input: "^Assign_30"
  input: "^Assign_31"
  input: "^Assign_32"
  input: "^Assign_33"
  input: "^Assign_34"
  input: "^Assign_35"
  input: "^Assign_36"
  input: "^Assign_37"
  input: "^Assign_38"
  input: "^Assign_39"
  input: "^Assign_40"
  input: "^Assign_41"
  input: "^Assign_42"
  input: "^Assign_43"
  input: "^Assign_44"
  input: "^Assign_45"
  input: "^Assign_46"
  input: "^Assign_47"
  input: "^Assign_48"
  input: "^Assign_49"
  input: "^Assign_50"
  input: "^Assign_51"
  input: "^Assign_52"
  input: "^Assign_53"
  input: "^Assign_54"
  input: "^Assign_55"
  input: "^Assign_56"
  input: "^Assign_57"
  input: "^Assign_58"
  input: "^Assign_59"
  input: "^Assign_60"
  input: "^Assign_61"
  input: "^Assign_62"
  input: "^Assign_63"
  input: "^Assign_64"
  input: "^Assign_65"
  input: "^Assign_66"
  input: "^Assign_67"
  input: "^Assign_68"
  input: "^Assign_69"
  input: "^Assign_70"
  input: "^Assign_71"
  input: "^Assign_72"
  input: "^Assign_73"
  input: "^Assign_74"
  input: "^Assign_75"
  input: "^Assign_76"
  input: "^Assign_77"
  input: "^Assign_78"
  input: "^Assign_79"
  input: "^Assign_80"
  input: "^Assign_81"
  input: "^Assign_82"
  input: "^Assign_83"
  input: "^Assign_84"
  input: "^Assign_85"
  input: "^Assign_86"
  input: "^Assign_87"
  input: "^Assign_88"
  input: "^Assign_89"
  input: "^Assign_90"
  input: "^Assign_91"
  input: "^Assign_92"
  input: "^Assign_93"
  input: "^Assign_94"
  input: "^Assign_95"
  input: "^Assign_96"
  input: "^Assign_97"
  input: "^Assign_98"
  input: "^Assign_99"
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_93/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_93"
  op: "AddV2"
  input: "ReadVariableOp"
  input: "add_93/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_93"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^AssignVariableOp"
  input: "^group_deps"
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Assign"
  input: "^Assign_1"
  input: "^Assign_10"
  input: "^Assign_11"
  input: "^Assign_12"
  input: "^Assign_13"
  input: "^Assign_14"
  input: "^Assign_15"
  input: "^Assign_16"
  input: "^Assign_17"
  input: "^Assign_18"
  input: "^Assign_19"
  input: "^Assign_2"
  input: "^Assign_20"
  input: "^Assign_21"
  input: "^Assign_22"
  input: "^Assign_23"
  input: "^Assign_24"
  input: "^Assign_3"
  input: "^Assign_4"
  input: "^Assign_5"
  input: "^Assign_6"
  input: "^Assign_7"
  input: "^Assign_8"
  input: "^Assign_9"
  input: "^bert/embeddings/LayerNorm/beta/adam_m/Assign"
  input: "^bert/embeddings/LayerNorm/beta/adam_v/Assign"
  input: "^bert/embeddings/LayerNorm/gamma/adam_m/Assign"
  input: "^bert/embeddings/LayerNorm/gamma/adam_v/Assign"
  input: "^bert/embeddings/position_embeddings/adam_m/Assign"
  input: "^bert/embeddings/position_embeddings/adam_v/Assign"
  input: "^bert/embeddings/token_type_embeddings/adam_m/Assign"
  input: "^bert/embeddings/token_type_embeddings/adam_v/Assign"
  input: "^bert/embeddings/word_embeddings/adam_m/Assign"
  input: "^bert/embeddings/word_embeddings/adam_v/Assign"
  input: "^bert/encoder/embedding_hidden_mapping_in/bias/adam_m/Assign"
  input: "^bert/encoder/embedding_hidden_mapping_in/bias/adam_v/Assign"
  input: "^bert/encoder/embedding_hidden_mapping_in/kernel/adam_m/Assign"
  input: "^bert/encoder/embedding_hidden_mapping_in/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m/Assign"
  input: "^bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v/Assign"
  input: "^bert/pooler/dense/bias/adam_m/Assign"
  input: "^bert/pooler/dense/bias/adam_v/Assign"
  input: "^bert/pooler/dense/kernel/adam_m/Assign"
  input: "^bert/pooler/dense/kernel/adam_v/Assign"
  input: "^global_step/Assign"
  input: "^output_bias/Assign"
  input: "^output_bias/adam_m/Assign"
  input: "^output_bias/adam_v/Assign"
  input: "^output_weights/Assign"
  input: "^output_weights/adam_m/Assign"
  input: "^output_weights/adam_v/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "output_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "output_bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "output_weights/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "output_weights/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "output_bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "output_bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 82
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: "global_step"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
        string_val: "bert/pooler/dense/kernel"
        string_val: "bert/pooler/dense/bias"
        string_val: "output_weights"
        string_val: "output_bias"
        string_val: "bert/embeddings/word_embeddings/adam_m"
        string_val: "bert/embeddings/word_embeddings/adam_v"
        string_val: "bert/embeddings/token_type_embeddings/adam_m"
        string_val: "bert/embeddings/token_type_embeddings/adam_v"
        string_val: "bert/embeddings/position_embeddings/adam_m"
        string_val: "bert/embeddings/position_embeddings/adam_v"
        string_val: "bert/embeddings/LayerNorm/beta/adam_m"
        string_val: "bert/embeddings/LayerNorm/beta/adam_v"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_m"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
        string_val: "bert/pooler/dense/kernel/adam_m"
        string_val: "bert/pooler/dense/kernel/adam_v"
        string_val: "bert/pooler/dense/bias/adam_m"
        string_val: "bert/pooler/dense/bias/adam_v"
        string_val: "output_weights/adam_m"
        string_val: "output_weights/adam_v"
        string_val: "output_bias/adam_m"
        string_val: "output_bias/adam_v"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "output_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "output_bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "bert/embeddings/word_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "bert/embeddings/position_embeddings/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/kernel/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "bert/pooler/dense/bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "output_weights/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "output_weights/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "output_bias/adam_m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "output_bias/adam_v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 82
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: "global_step"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
        string_val: "bert/pooler/dense/kernel"
        string_val: "bert/pooler/dense/bias"
        string_val: "output_weights"
        string_val: "output_bias"
        string_val: "bert/embeddings/word_embeddings/adam_m"
        string_val: "bert/embeddings/word_embeddings/adam_v"
        string_val: "bert/embeddings/token_type_embeddings/adam_m"
        string_val: "bert/embeddings/token_type_embeddings/adam_v"
        string_val: "bert/embeddings/position_embeddings/adam_m"
        string_val: "bert/embeddings/position_embeddings/adam_v"
        string_val: "bert/embeddings/LayerNorm/beta/adam_m"
        string_val: "bert/embeddings/LayerNorm/beta/adam_v"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_m"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
        string_val: "bert/pooler/dense/kernel/adam_m"
        string_val: "bert/pooler/dense/kernel/adam_v"
        string_val: "bert/pooler/dense/bias/adam_m"
        string_val: "bert/pooler/dense/bias/adam_v"
        string_val: "output_weights/adam_m"
        string_val: "output_weights/adam_v"
        string_val: "output_bias/adam_m"
        string_val: "output_bias/adam_v"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 82
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_b6ccb58fe2664d419819d1a64e3a3f06/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/beta/adam_m"
        string_val: "bert/embeddings/LayerNorm/beta/adam_v"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_m"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_v"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/position_embeddings/adam_m"
        string_val: "bert/embeddings/position_embeddings/adam_v"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/token_type_embeddings/adam_m"
        string_val: "bert/embeddings/token_type_embeddings/adam_v"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/word_embeddings/adam_m"
        string_val: "bert/embeddings/word_embeddings/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
        string_val: "bert/pooler/dense/bias"
        string_val: "bert/pooler/dense/bias/adam_m"
        string_val: "bert/pooler/dense/bias/adam_v"
        string_val: "bert/pooler/dense/kernel"
        string_val: "bert/pooler/dense/kernel/adam_m"
        string_val: "bert/pooler/dense/kernel/adam_v"
        string_val: "global_step"
        string_val: "output_bias"
        string_val: "output_bias/adam_m"
        string_val: "output_bias/adam_v"
        string_val: "output_weights"
        string_val: "output_weights/adam_m"
        string_val: "output_weights/adam_v"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "bert/embeddings/LayerNorm/beta"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  input: "bert/embeddings/position_embeddings"
  input: "bert/embeddings/position_embeddings/adam_m"
  input: "bert/embeddings/position_embeddings/adam_v"
  input: "bert/embeddings/token_type_embeddings"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  input: "bert/embeddings/word_embeddings"
  input: "bert/embeddings/word_embeddings/adam_m"
  input: "bert/embeddings/word_embeddings/adam_v"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  input: "bert/pooler/dense/bias"
  input: "bert/pooler/dense/bias/adam_m"
  input: "bert/pooler/dense/bias/adam_v"
  input: "bert/pooler/dense/kernel"
  input: "bert/pooler/dense/kernel/adam_m"
  input: "bert/pooler/dense/kernel/adam_v"
  input: "global_step/Read/ReadVariableOp"
  input: "output_bias"
  input: "output_bias/adam_m"
  input: "output_bias/adam_v"
  input: "output_weights"
  input: "output_weights/adam_m"
  input: "output_weights/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: "bert/embeddings/LayerNorm/beta"
        string_val: "bert/embeddings/LayerNorm/beta/adam_m"
        string_val: "bert/embeddings/LayerNorm/beta/adam_v"
        string_val: "bert/embeddings/LayerNorm/gamma"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_m"
        string_val: "bert/embeddings/LayerNorm/gamma/adam_v"
        string_val: "bert/embeddings/position_embeddings"
        string_val: "bert/embeddings/position_embeddings/adam_m"
        string_val: "bert/embeddings/position_embeddings/adam_v"
        string_val: "bert/embeddings/token_type_embeddings"
        string_val: "bert/embeddings/token_type_embeddings/adam_m"
        string_val: "bert/embeddings/token_type_embeddings/adam_v"
        string_val: "bert/embeddings/word_embeddings"
        string_val: "bert/embeddings/word_embeddings/adam_m"
        string_val: "bert/embeddings/word_embeddings/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
        string_val: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
        string_val: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
        string_val: "bert/pooler/dense/bias"
        string_val: "bert/pooler/dense/bias/adam_m"
        string_val: "bert/pooler/dense/bias/adam_v"
        string_val: "bert/pooler/dense/kernel"
        string_val: "bert/pooler/dense/kernel/adam_m"
        string_val: "bert/pooler/dense/kernel/adam_v"
        string_val: "global_step"
        string_val: "output_bias"
        string_val: "output_bias/adam_m"
        string_val: "output_bias/adam_v"
        string_val: "output_weights"
        string_val: "output_weights/adam_m"
        string_val: "output_weights/adam_v"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 82
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 82
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_m"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/beta/adam_v"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_m"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "bert/embeddings/LayerNorm/gamma/adam_v"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "bert/embeddings/position_embeddings"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_m"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "bert/embeddings/position_embeddings/adam_v"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/position_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_m"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "bert/embeddings/token_type_embeddings/adam_v"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/token_type_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "bert/embeddings/word_embeddings"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_m"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "bert/embeddings/word_embeddings/adam_v"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/embeddings/word_embeddings/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/embedding_hidden_mapping_in/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/beta/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/LayerNorm_1/gamma/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/key/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/query/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/attention_1/self/value/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/encoder/transformer/group_0/inner_group_0/ffn_1/intermediate/output/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "bert/pooler/dense/bias"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_m"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "bert/pooler/dense/bias/adam_v"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "bert/pooler/dense/kernel"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_m"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "bert/pooler/dense/kernel/adam_v"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bert/pooler/dense/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "output_bias"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "output_bias/adam_m"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "output_bias/adam_v"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "output_weights"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "output_weights/adam_m"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "output_weights/adam_v"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_weights/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "__inference_tf_data_experimental_map_and_batch_<lambda>_61"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity_3"
        type: DT_INT32
      }
      output_arg {
        name: "identity_4"
        type: DT_INT32
      }
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "args_0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      input: "ParseSingleExample/Const_2:output:0"
      input: "ParseSingleExample/Const_3:output:0"
      input: "ParseSingleExample/Const_4:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
            shape {
              dim {
                size: 128
              }
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "input_ids"
            s: "input_mask"
            s: "is_real_example"
            s: "label_ids"
            s: "segment_ids"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
            shape {
              dim {
                size: 128
              }
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "ToInt32"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ToInt32_1"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ToInt32_2"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:2"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToInt32_3"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:3"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToInt32_4"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:4"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "ToInt32:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "ToInt32_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "ToInt32_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "ToInt32_3:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "ToInt32_4:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_read_one_file_31"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
